name: RushAction

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    working-directory: /home/lrm/sideProjs/rush

jobs:
  checksAndBuild:
    name: ChecksAndBuild
    runs-on: self-hosted
    steps:
      - name: Git Pull
        run: git pull
      - name: Enforce formatting
        run: cargo fmt --check
      - name: Linting
        run: cargo clippy -- -D warnings
      - name: Run tests
        run: cargo test  
      - name: Run Build Release
        run: cargo build --release 

  # coverage:
  #   name: Code coverage
  #   runs-on: ubuntu-latest
  #   needs: test
  #   container:
  #     image: xd009642/tarpaulin
  #     options: --security-opt seccomp=unconfined
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
  #     - name: Generate code coverage
  #       run: |
  #         cargo tarpaulin --verbose --workspace

  deploy:
    name: Deploy
    runs-on: self-hosted
    needs: checksAndBuild
    env:
      TELOXIDE_TOKEN: ${{ secrets.TELOXIDE_TOKEN }}
      ESP8266_ADDRESS_PORT: ${{ secrets.ESP8266_ADDRESS_PORT }}
      SYRINX_VARS: ${{ secrets.SYRINX_VARS }}
      SNOWDOG_VARS: ${{ secrets.SNOWDOG_VARS }}
      THINKPADX1_VARS: ${{ secrets.THINKPADX1_VARS }}
      RPI5_VARS: ${{ secrets.RPI5_VARS }}
      RPI3_VARS: ${{ secrets.RPI3_VARS }}

    steps:
      - name: Run Deploy Script
        run: ./.github/workflows/deployScript.sh $TELOXIDE_TOKEN $ESP8266_ADDRESS_PORT $SYRINX_VARS $SNOWDOG_VARS $THINKPADX1_VARS $RPI5_VARS $RPI3_VARS
